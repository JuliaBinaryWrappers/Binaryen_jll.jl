# Autogenerated wrapper script for Binaryen_jll for armv6l-linux-musleabihf-cxx03
export libbinaryen, wasm2js, wasmas, wasmctoreval, wasmdis, wasmfuzztypes, wasmmerge, wasmmetadce, wasmopt, wasmreduce, wasmshell, wasmsplit

JLLWrappers.@generate_wrapper_header("Binaryen")
JLLWrappers.@declare_library_product(libbinaryen, "libbinaryen.so")
JLLWrappers.@declare_executable_product(wasm2js)
JLLWrappers.@declare_executable_product(wasmas)
JLLWrappers.@declare_executable_product(wasmctoreval)
JLLWrappers.@declare_executable_product(wasmdis)
JLLWrappers.@declare_executable_product(wasmfuzztypes)
JLLWrappers.@declare_executable_product(wasmmerge)
JLLWrappers.@declare_executable_product(wasmmetadce)
JLLWrappers.@declare_executable_product(wasmopt)
JLLWrappers.@declare_executable_product(wasmreduce)
JLLWrappers.@declare_executable_product(wasmshell)
JLLWrappers.@declare_executable_product(wasmsplit)
function __init__()
    JLLWrappers.@generate_init_header()
    JLLWrappers.@init_library_product(
        libbinaryen,
        "lib/libbinaryen.so",
        RTLD_LAZY | RTLD_DEEPBIND,
    )

    JLLWrappers.@init_executable_product(
        wasm2js,
        "bin/wasm2js",
    )

    JLLWrappers.@init_executable_product(
        wasmas,
        "bin/wasm-as",
    )

    JLLWrappers.@init_executable_product(
        wasmctoreval,
        "bin/wasm-ctor-eval",
    )

    JLLWrappers.@init_executable_product(
        wasmdis,
        "bin/wasm-dis",
    )

    JLLWrappers.@init_executable_product(
        wasmfuzztypes,
        "bin/wasm-fuzz-types",
    )

    JLLWrappers.@init_executable_product(
        wasmmerge,
        "bin/wasm-merge",
    )

    JLLWrappers.@init_executable_product(
        wasmmetadce,
        "bin/wasm-metadce",
    )

    JLLWrappers.@init_executable_product(
        wasmopt,
        "bin/wasm-opt",
    )

    JLLWrappers.@init_executable_product(
        wasmreduce,
        "bin/wasm-reduce",
    )

    JLLWrappers.@init_executable_product(
        wasmshell,
        "bin/wasm-shell",
    )

    JLLWrappers.@init_executable_product(
        wasmsplit,
        "bin/wasm-split",
    )

    JLLWrappers.@generate_init_footer()
end  # __init__()
